package controller;
import view.*;
import model.*;
import toolbox.AutopreisBerechnen;
import toolbox.Berechnungen;
import toolbox.Umwandlung;

public class Craptroller 
{	
	public Craptroller()
	{
		new View();
		
		Zeitmessung Zeitmessung = new Zeitmessung();
		Zeitmessung.startZeit();
		
		Temperaturumwandlung GradUmwandlung = new Temperaturumwandlung();
		GradUmwandlung.CelsiusInFahrenheit(32);
		GradUmwandlung.FahrenheitInCelsius(10);
		
		System.out.println("Hier wird getestet, wie viele Franken die Angegebenen Euro sind. \nTest Werte: 12€ == 13.33CHF.");
		EuroInFranken Waehrung = new EuroInFranken();
		Waehrung.EuroInFranken(12.0);
		
		// MB in GB					Parameter: Anzahl MB
		GroessenUmwandlung mbtogb = new GroessenUmwandlung();
		mbtogb.MBinGB(690);
		
		// GB in MB					Parameter: Anzahl in GB
		GroessenUmwandlung gbtomb = new GroessenUmwandlung();
		gbtomb.GBinMB(1);
		
		AutoPreisBerechnen auto = new AutoPreisBerechnen(8000.0, 3, 333, 4000.0);
		auto.Berechnung();
		
		Zufallszahlen zufallszahl1= new Zufallszahlen();
		zufallszahl1.Zufallszahl(15000, 14000);	
		
		Zufallszahlen Berechnungen = new Zufallszahlen();
		Berechnungen.Zufallszahl(15000, 0);
		Berechnungen.Zufallszahl(15000, 0);
		
		SinCosTan sincostan = new SinCosTan();
		sincostan.SinusCosinusTangens("Sinus", "Grad", 30);
		sincostan.SinusCosinusTangens("Sinus", "Rad", 90);
		sincostan.SinusCosinusTangens("Cosinus", "Grad", 90);
		
		// Hypothenuse				Parameter: Anakathete, Gegenkathete
		Pythagoras hypothenuse = new Pythagoras();
		hypothenuse.hypothenuse(15, 8);
		// Anakethete				Parameter: Gegenkathete, Hypothenuse
		Pythagoras ankathete = new Pythagoras();
		ankathete.ankathete(8, 30);
		// Gegenkathete				Parameter: Anakathete, Hypothenuse
		Pythagoras gegenkathete = new Pythagoras();
		gegenkathete.gegenkathete(15, 30);
		
		PHwert phWert = new PHwert();
		phWert.phWert(0.2);
		
		sincostan.SinusCosinusTangens("Cosinus", "Grad", 90);
		sincostan.SinusCosinusTangens("Cosinus", "Grad", 90);
		
		Zeitmessung.stopZeit();
	}
}
